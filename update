#!/bin/bash
PATH=$PATH:$(pwd)/dnss-tools/target/appassembler/bin:

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
CWD="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

JSON=0
SKILLICONS=0
CONTEXT=0
EXTRACT_PAK=0
EXTRACT_DNT=0
MVN_BUILD=0

function show_help {
    echo This script is used to update SQL, skill icons, etc.
    echo
    echo Usage:
    echo "  ./update [OPTION]..."
    echo
    echo Options:
    echo -e "  -b, --build\t\tDoes a maven build before running any of the other options."
    echo -e "  -p, --extract-pak\tRuns the pak extracting program before any of the below options."
    echo -e "  -d, --extract-dnt\tRuns the dnt extracting program before any of the below options."
    echo -e "  -j, --json\t\tGenerate the JSON files, and increment the version for the JSON files."
    echo -e "  -s, --skilicons, \tExtract the skill icons from the DN Pak files."
    echo -e "  -c, --context\t\tGenerate the Spring Bean context file"
}

OPTIND=1
while getopts "jscpdbh,json,skillicons,context,extract-pak,extract-dnt,build,help" opt; do
    case "${opt}" in
        j|json) JSON=1
            ;;
        s|skillicons) SKILLICONS=1
            ;;
        c|context) CONTEXT=1
            ;;
        p|extract-pak) EXTRACT_PAK=1
            ;;
        d|extract-dnt) EXTRACT_DNT=1
            ;;
        b|build) MVN_BUILD=1
            ;;
        h|help)
            show_help
            exit 0
            ;;
    esac
done
shift $((OPTIND-1))

if [[ ${MVN_BUILD} -eq 1 ]]; then
    mvn clean install -DskipTests --projects dnss-tools --also-make
fi

if [[ ${EXTRACT_PAK} -eq 1 ]]; then
    pak
fi

if [[ ${EXTRACT_DNT} -eq 1 ]]; then
    dnt
    cd /cygdrive/e/resource/sql
    export PGPASSWORD=dnss
    for sql in *; do
      psql -h localhost -U dnss -d dnss < ${sql}
    done
fi

if [[ ${CONTEXT} -eq 1 ]]; then
    ruby ${CWD}/dnss-tools/src/main/ruby/context_generator.rb
fi

if [[ ${JSON} -eq 1 ]]; then
    cd ${CWD}/dnss-web/src/main/webapp/resources/json/min
    echo Removing $(ls)
    rm -f *
    ruby ${CWD}/dnss-tools/src/main/ruby/json_generator.rb
    version=$(ruby ${CWD}/dnss-tools/src/main/ruby/update_properties.rb json)
    for file in *; do
        echo Renaming $file to ${version}-${file}
        mv ${file} ${version}-${file}
    done
    git add *
fi

if [[ ${SKILLICONS} -eq 1 ]]; then
    cd ${CWD}/dnss-web/src/main/webapp/resources/images/skillicons
    echo Removing $(ls)
    rm -f *
    cd /cygdrive/e/resource/ui/mainbar
    echo Formatting $(ls skillicon*.dds) to PNG
    mogrify -format png skillicon*.dds
    echo Cropping $(ls skillicon*.png)
    mogrify -crop 500x550+0+0 +repage +repage skillicon*.png # 550 = 50px * 11 rows
    for png in skillicon*.png; do
        echo pngcrush -ow ${png}
        pngcrush -ow ${png} >/dev/null
    done
    cd -
    echo Copying over $(ls /cygdrive/e/resource/ui/mainbar/skillicon*.png) to $(pwd)
    cp -f /cygdrive/e/resource/ui/mainbar/skillicon*.png .
    version=$(ruby ${CWD}/dnss-tools/src/main/ruby/update_properties.rb skillicon)
    for file in *; do
        echo Renaming ${file} to ${version}_${file}
        mv ${file} ${version}_${file}
    done
    git add *
fi